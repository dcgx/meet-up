import Head from "next/head"
import { useState } from "react"
import toast, { Toaster } from "react-hot-toast"
import { useRoomContext } from "../context/RoomContext"
import { useRouter } from "next/router"
import { AiFillGithub } from "react-icons/ai"
import { HiOutlineLogout } from "react-icons/hi"

import { useUser, useSupabaseClient } from "@supabase/auth-helpers-react"
import Spinner from "../components/Spinner"
import InputMask from "react-input-mask"

export default function Home() {
  const router = useRouter()
  const user = useUser()
  const supabase = useSupabaseClient()
  
  const { createRoom, joinRoom, isValidRoomName } = useRoomContext()

  const [roomName, setRoomName] = useState(null)
  const [isJoiningRoom, setIsJoiningRoom] = useState(false)

  const isAuthenticated = !!user

  const handleCreateRoom = async () => {
    createRoom({ username: user.user_metadata.user_name })
      .then((roomName) => {
        toast.success("Connected")
        router.push("/[roomName]", `/${roomName}`)
      })
      .catch((error) => {
        toast.error(error.message)
      })
  }

  const handleInputRoomNameAndJoinRoom = (e) => {
    setRoomName(e.target.value)
    if (isValidRoomName(e.target.value)) {
      setIsJoiningRoom(true)
      return joinRoom({
        username: user.user_metadata.user_name,
        roomId: e.target.value,
      })
        .then((roomId) => {
          toast.loading(`Contectando a ${roomId}...`)
          setTimeout(() => {
            toast.dismiss()
            toast.success("Conectado con Ã©xito")
            toast.loading(`Redirigiendo a la sala ${roomId}...`)
            // router.push("/[roomName]", `/${roomId}`)
          }, 4000)
          // router.push("/[roomName]", `/${roomId}`)
        })
        .finally(() => setIsJoiningRoom(false))
    }
  }

  const handleJoinRoom = (e) => {
    setIsJoiningRoom(true)
    joinRoom({ username: user.user_metadata.user_name, roomId: roomName })
      .then((roomId) => {
        toast.success("Connected")
        router.push("/[roomName]", `/${roomId}`)
      })
      .catch((error) => {
        toast.error(error.message)
      })
      .finally(() => {
        setIsJoiningRoom(false)
      })
  }

  const handleSignInWithGitHub = async () => {
    const { data, error } = await supabase.auth.signInWithOAuth({
      provider: "github",
      options: {
        redirectTo:
          process.env.NODE_ENV !== "production"
            ? "http://localhost:3000/api/auth/callback"
            : "https://talkimeet.vercel.app/api/auth/callback",
      },
    })
  }

  return (
    <div>
      <Head>
        <title>Talki&Meet</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <header className="top-0 flex w-full justify-between items-center px-5 py-4 shadow">
          <div>
            <h1 className="font-bold text-3xl text-slate-700">TalkiðŸ‘¾meet</h1>
          </div>

          <div className="flex gap-4">
            <a className="flex items-center justify-between gap-3 cursor-pointer hover:bg-slate-100 border border-slate-300 px-5 py-2 rounded-lg">
              <AiFillGithub size={26} />
              Repositorio
            </a>

            {isAuthenticated && (
              <a
                onClick={() => supabase.auth.signOut()}
                className="flex items-center justify-between gap-3 cursor-pointer hover:bg-slate-100 border border-slate-300 px-5 py-2 rounded-lg"
              >
                <HiOutlineLogout size={26} />
              </a>
            )}
          </div>
        </header>

        <div className="w-full h-full px-20 my-20 py-5 m-0 mx-auto text-center grid grid-cols-2">
          <img src={"/img/hero.jpg"} layout="fill" />
          <div className="flex flex-col items-start justify-center">
            <h1 className="font-bold text-4xl lg:text-6xl mb-5 text-left">
              Plataforma de videollamadas gratuitas y seguras.
            </h1>
            <p className="text-gray-700 mt-4 text-left">
              Con Meetwei podrÃ¡s crear y unirte a reuniones, hablar con tus cercanos de manera
              fÃ¡cil.
            </p>

            <div className="text-left w-full">
              {isAuthenticated ? (
                <div className="flex items-center">
                  <div className="items-center flex">
                    <button
                      onClick={handleCreateRoom}
                      className="px-6 py-3 w-40 rounded-md bg-purple-900 text-zinc-100 text-sm font-medium"
                    >
                      Nueva reuniÃ³n
                    </button>
                  </div>

                  <div className="flex w-full justify-between items-center mx-5 ">
                    <InputMask
                      value={roomName}
                      onInput={handleInputRoomNameAndJoinRoom}
                      className="w-full my-6 border py-3 px-3 shadow rounded focus:outline-none font-mono font-normal "
                      placeholder="CÃ³digo de ejemplo: abc-mnps-xyx"
                      mask="aaa-aaaa-aaa"
                      maskChar=" "
                    ></InputMask>
                    <button
                      type="submit"
                      onClick={handleJoinRoom}
                      className="px-6 py-3 mx-5 rounded-md bg-sky-500 text-zinc-100 text-sm font-medium"
                    >
                      {isJoiningRoom ? <Spinner /> : "Unirse"}
                    </button>
                  </div>
                </div>
              ) : (
                <button
                  onClick={handleSignInWithGitHub}
                  className="px-6 py-3 mt-5 rounded-md bg-zinc-800 text-zinc-100 text-sm font-medium"
                >
                  Iniciar con GitHub
                </button>
              )}
            </div>
          </div>
        </div>
      </main>

      <Toaster />

      <footer></footer>
    </div>
  )
}
